#
# Â© 2023 Snyk Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default values for kubernetes-scanner.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# TODO: set cluster name & orgID
#organizationID: "setme"

config:
  # clusterName is a friendly name for the cluster that this agent is running
  # on. For example "prod-us" or "dev-eu".
  clusterName: "default"
  scanning:
    # define all types that will be scanned on your cluster. This part will be
    # used to generate the config for the scanner, as well as the RBAC
    # ClusterRole for it.
    # The scanner will combine all apiGroups x resources, and will scan for all
    # existing combinations. If a combination should not exist, it will be
    # skipped.
    # The types configuration is similar to an RBAC `Role` definition, but
    # includes some additional fields.
    types:
      # A list of APIGroups where the below resources are in.
      - apiGroups: [""]
        # a list of resource types to scan.
        resources:
          - pods
          - services
          - namespaces
          - replicationcontrollers
          - nodes
          - configmaps
        # a list of API versions that should be scanned. If unset, the
        # APIServer's "preferredVersion" will be used. Can also specify
        # multiple to scan for multiple versions at once.
        versions: ["v1"]
        # an empty list (or not defining this key at all) does not limit
        # scanning to any namespace. E.g. "namespaces: ["default"]" would limit
        # the scanner to only scan for pods in the default namespace.
        namespaces: []
      - apiGroups: ["rbac.authorization.k8s.io"]
        resources:
          - clusterroles
          - roles
          - clusterrolebindings
          - rolebindings
      - apiGroups: ["batch"]
        resources:
          - cronjobs
          - jobs
      - apiGroups: ["apps"]
        resources:
          - replicasets
          - daemonsets
          - deployments
          - statefulsets
      - apiGroups: ["networking.k8s.io"]
        resources:
          - ingresses
      - apiGroups: ["apps.openshift.io"]
        resources:
          - deploymentconfigs
      - apiGroups: ["argoproj.io"]
        resources:
          - rollouts
      - apiGroups: ["gateway.solo.io"]
        resources:
          - gateways
          - httpgateways
          - routeoptions
          - routetables
          - virtualhostoptions
          - virtualservices
      - apiGroups: ["getambassador.io"]
        resources:
          - consulresolvers
          - devportals
          - hosts
          - kubernetesendpointresolvers
          - kubernetesserviceresolvers
          - listeners
          - logservices
          - mappings
          - modules
          - ratelimitservices
          - tcpmappings
          - tracingservices
      - apiGroups: ["gloo.solo.io"]
        resources:
          - proxies
          - upstreamgroups
          - upstreams
      - apiGroups: ["graphql.gloo.solo.io"]
        resources:
          - graphqlschemas
      - apiGroups: ["install.istio.io"]
        resources:
          - istiooperators
      - apiGroups: ["networking.gke.io"]
        resources:
          - managedcertificates
          - serviceattachments
          - frontendconfigs
          - servicenetworkendpointgroups
      - apiGroups: ["networking.istio.io"]
        resources:
          - destinationrules
          - envoyfilters
          - gateways
          - serviceentries
          - sidecars
          - virtualservices
          - workloadentries
          - workloadgroups
      - apiGroups: ["ratelimit.solo.io"]
        resources:
          - ratelimitconfigs
      - apiGroups: ["security.istio.io"]
        resources:
          - authorizationpolicies
          - peerauthentications
          - requestauthentications
    requeueAfter: "6h"
  egress:
    httpClientTimeout: "5s"
    snykAPIBaseURL: "https://app.dev.snyk.io"

# secretName is the name of the secret containing auth credentials.
# requires a key "snykServiceAccountToken". You can find more information on
# Snyk service accounts at https://docs.snyk.io/snyk-admin/service-accounts.
secretName: ""

image:
  repository: snyk/kubernetes-scanner
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

healthCheck:
  port: 8081

metrics:
  # set to 0 to disable.
  port: 8080

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
