version: 2.1
orbs:
  go: circleci/go@1
  slack: circleci/slack@4
  snyk: snyk/snyk@1

commands:
  gcr_auth:
    description: Auth GCR
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.14
      - run:
          name: GCR auth
          command: echo $GCLOUD_GCR_BUILDER | docker login -u _json_key --password-stdin https://gcr.io/snyk-main
  save-build-cache:
    steps:
      - save_cache:
          name: Saving Go build cache
          key: go-build-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - /home/circleci/.cache/go-build
  restore-build-cache:
    steps:
      - restore_cache:
          name: Restoring Go build cache
          keys: 
            - go-build-cache-{{ .Branch }}-{{ .Revision }}
            - go-build-cache-{{ .Branch }}-
            - go-build-cache-
jobs:
  scan:
    resource_class: small
    docker:
      - image: "cimg/go:1.20"
    steps: 
      - checkout
      - snyk/scan:
          fail-on-issues: true
          monitor-on-build: false # ?
          organization: snyk-apps

  test:
    resource_class: medium
    executor:
      name: go/default
      tag: "1.20"
    steps:
      - checkout
      # saving & restoring the module cache takes almost 6x longer than simply fetching the modules...
      #- go/mod-download-cached
      - restore-build-cache 
      - go/mod-download
      - run:
          command: |
            golangci-lint run -v --timeout=2m ./...
          environment:
            # we re-use the Go build cache as our lint-cache too.
            GOLANGCI_LINT_CACHE: /home/circleci/.cache/go-build
      # we're not using the go/test command from the Go orb because that uses `-count=1` as an argument.
      # That means all tests are run every time, instead of honoring the cache.
      - run:
          command: |
            # install required tools for kubebuilder tests.
            go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest
            source <(setup-envtest use -p env) 
            go test -race ./... 
      - save-build-cache

  release:
    resource_class: small
    docker: [image: "cimg/go:1.20"]
    steps:
      - checkout
      - gcr_auth
      - run:
          name: build docker image
          command: make image
      #- run:
          #name: push docker image
          #command: make image-push


workflows:
  "Test":
    jobs:
      - test:
          filters:
            branches:
              ignore: [main]
      - scan:
          name: scan
          context: ["snyk-apps"]
          filters:
            branches:
              ignore: [main]
  "Release":
    jobs:
      - test:
          filters:
            branches:
              only: main
            tags:
              only: /^v.*/
      - release:
          requires: ["test"]
          context: [snyk-docker-build, snyk-bot-slack] 
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
